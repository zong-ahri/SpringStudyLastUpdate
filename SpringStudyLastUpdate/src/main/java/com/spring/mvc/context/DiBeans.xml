<?xml version="1.0" encoding="UTF-8"?>
<!-- 
	1. Xml
		ClassPathXmlApplicationContext("빈파일경로");
		FileSystemXmlApplicationContext("실질적인 파일의 경로");
	2. Annotation
		AnnotationConfigApplicationContext(클래스명.Class);

	%% 어노테이션을 활용해서 DI하는 방법 %%
	
	xml파일에 추가하여야하는 소스코드
	<context:annotation-config/>
	
	@Autowired
		- 속성 [@Autowired(required = false)] 주입될 빈이 없을 경우 Null로 자동 처리
	@Qualifier("bean의 이름")
	
	<context:component-scan base-package="패키지 범위, 패키지 범위2"/>
	@Component
	xml의 id와 동일한 방식 -> @Component("인스턴스명")
	
	@Value("값")
	private String name;
	
	@Component  - @Controller(model, view 합쳐주는 역할)	- @RequestMapping
														- @GetMapping
														- @...
				- @service(model의 정규화)
				- @Repository(DAO, DTO, MGR)
				
	xml파일 -> class파일로 대체하는 방법
	@ComponentScan("com.spring.mvc.context", "com.spring.mvc.DAO")
	@Configuration
	public class 클래스명 {
		@Bean
		public DiconnectionEx diconnectionEx() {	->		메소드명이 인스턴스명이다.
			return new DiconnectionEx();
		}
	}

 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	
	<context:component-scan base-package="com.spring.mvc.context"/>
	<!-- <context:annotation-config /> -->
	
	<!-- 
	<bean id="diex1" class="com.spring.mvc.context.DiEx1">
		<property name="name" value="최종원"></property>
		<property name="phone" value="010-0000-0000"></property>
	</bean>

	<bean id="diex2" class="com.spring.mvc.context.DiEx2">
		<property name="name" value="최종원"></property>
		<property name="number" value="123456-1234567"></property>
	</bean>
	
	<bean id="diConnectionEx" class="com.spring.mvc.context.DiConnectionEx">
		<property name="diex" ref="diex2"></property>
	</bean>
	-->
	
</beans>
